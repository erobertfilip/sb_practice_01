server.error.include-message=always
server.error.include-binding-errors=always

spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.username=postgres
spring.datasource.password=Parola
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Temp security settings
spring.security.user.name=user
spring.security.user.password=pass123!

# Actuator health info customization
management.endpoint.health.group.custom.show-components=always
management.endpoint.health.group.custom.show-details=always

# Properties to enable graceful shutdown and to configure grace period
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=2m

# Properties to enable and expose actuator shutdown endpoint
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=info,health,shutdown

# Oauth2 config
#spring.security.oauth2.client.registration.<client-id>.client-id=your-client-id
#spring.security.oauth2.client.registration.<client-id>.client-secret=your-client-secret
#spring.security.oauth2.client.registration.<client-id>.redirect-uri={baseUrl}/login/oauth2/code/<client-id>
#spring.security.oauth2.client.provider.<provider-id>.authorization-uri=authorization-uri
#spring.security.oauth2.client.provider.<provider-id>.token-uri=token-uri
#spring.security.oauth2.client.provider.<provider-id>.user-info-uri=user-info-uri
#spring.security.oauth2.client.provider.<provider-id>.user-name-attribute=user-name-attribute